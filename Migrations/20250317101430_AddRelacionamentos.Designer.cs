// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PadariaProj.Models;

#nullable disable

namespace PadariaProj.Migrations
{
    [DbContext(typeof(Contexto))]
    [Migration("20250317101430_AddRelacionamentos")]
    partial class AddRelacionamentos
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("PadariaProj.Models.IngredienteProducao", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("IngredienteId")
                        .HasColumnType("int");

                    b.Property<int>("ProducaoId")
                        .HasColumnType("int");

                    b.Property<decimal>("QuantidadeUsada")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("IngredienteId");

                    b.HasIndex("ProducaoId");

                    b.ToTable("IngredientesProducoes");
                });

            modelBuilder.Entity("PadariaProj.Models.IngredienteVenda", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("IngredienteId")
                        .HasColumnType("int");

                    b.Property<decimal>("QuantidadeUtilizada")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("VendaId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IngredienteId");

                    b.HasIndex("VendaId");

                    b.ToTable("IngredientesVendas");
                });

            modelBuilder.Entity("PadariaProj.Models.Ingredientes", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("QuantidadeDisponivel")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable("Ingredientes");
                });

            modelBuilder.Entity("PadariaProj.Models.Producao", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Data")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("FarinhaConsumida")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("QuantidadePaes")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Producao");
                });

            modelBuilder.Entity("PadariaProj.Models.Vendas", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Data")
                        .HasColumnType("datetime2");

                    b.Property<string>("TipoPagamento")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("ValorTotal")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable("Vendas");
                });

            modelBuilder.Entity("PadariaProj.Models.IngredienteProducao", b =>
                {
                    b.HasOne("PadariaProj.Models.Ingredientes", "Ingrediente")
                        .WithMany()
                        .HasForeignKey("IngredienteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PadariaProj.Models.Producao", "Producao")
                        .WithMany("IngredientesUtilizados")
                        .HasForeignKey("ProducaoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Ingrediente");

                    b.Navigation("Producao");
                });

            modelBuilder.Entity("PadariaProj.Models.IngredienteVenda", b =>
                {
                    b.HasOne("PadariaProj.Models.Ingredientes", "Ingrediente")
                        .WithMany("IngredientesVendidos")
                        .HasForeignKey("IngredienteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PadariaProj.Models.Vendas", "Venda")
                        .WithMany("IngredientesVendidos")
                        .HasForeignKey("VendaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Ingrediente");

                    b.Navigation("Venda");
                });

            modelBuilder.Entity("PadariaProj.Models.Ingredientes", b =>
                {
                    b.Navigation("IngredientesVendidos");
                });

            modelBuilder.Entity("PadariaProj.Models.Producao", b =>
                {
                    b.Navigation("IngredientesUtilizados");
                });

            modelBuilder.Entity("PadariaProj.Models.Vendas", b =>
                {
                    b.Navigation("IngredientesVendidos");
                });
#pragma warning restore 612, 618
        }
    }
}
